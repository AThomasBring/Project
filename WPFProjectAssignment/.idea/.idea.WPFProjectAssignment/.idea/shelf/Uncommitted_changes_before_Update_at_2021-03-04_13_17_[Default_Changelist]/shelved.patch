Index: WPFProjectAssignment/MainWindow.xaml.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Dynamic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\nusing System.Windows;\r\nusing System.Windows.Controls;\r\nusing System.Windows.Data;\r\nusing System.Windows.Documents;\r\nusing System.Windows.Input;\r\nusing System.Windows.Media;\r\nusing System.Windows.Media.Imaging;\r\nusing System.Windows.Navigation;\r\nusing System.Windows.Shapes;\r\n\r\nnamespace WPFProjectAssignment\r\n{\r\n    public partial class MainWindow : Window\r\n    {\r\n        // A static variable in the `Program` class is available in every method of that class. Effectively a \"global\" variable.\r\n\r\n        // Array of Products & Dictionary for shopping cart\r\n        public static Product[] Products;\r\n        public static ShoppingCart Cart;\r\n        \r\n\r\n        // We store product information in a CSV file in the project directory.\r\n        public const string ProductFilePath = \"Products.csv\";\r\n        public const string CartFilePath = @\"C:\\Windows\\Temp\\Cart.csv\";\r\n\r\n        private ListBox ProductBox = new ListBox();\r\n        private TextBlock InfoText = new TextBlock();\r\n        private Image InfoImage = new Image();\r\n        private Grid TextandImageGrid = new Grid();\r\n        private Grid ButtonGrid = new Grid();\r\n        private StackPanel InfoPanel = new StackPanel();\r\n        private TextBlock cartTextBlock = new TextBlock();\r\n        private TextBlock infoPrice = new TextBlock();\r\n        private Button checkoutButton = new Button();\r\n        private Button addToCartButton = new Button();\r\n        private TextBox DiscountBlock = new TextBox();\r\n\r\n        // We store the most recent selected product here\r\n        private Product SelectedProduct { get; set; }\r\n\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n            Start();\r\n        }\r\n\r\n        private static Product[] LoadProducts()\r\n        {\r\n            // If the file doesn't exist, stop the program completely.\r\n            if (!File.Exists(ProductFilePath))\r\n            {\r\n                //todo felhantering\r\n                MessageBox.Show(\"Could not read product file.\");\r\n            }\r\n\r\n            // Create an empty list of products, then go through each line of the file to fill it.\r\n            List<Product> products = new List<Product>();\r\n            string[] lines = File.ReadAllLines(ProductFilePath);\r\n\r\n            foreach (string line in lines)\r\n            {\r\n                try\r\n                {\r\n                    // First, split the line on commas (CSV means \"comma-separated values\").\r\n                    string[] parts = line.Split(',');\r\n\r\n                    // Then create a product with its values set to the different parts of the line.\r\n                    Product p = new Product\r\n                    {\r\n                        Code = parts[0],\r\n                        Name = parts[1],\r\n                        Description = parts[2],\r\n                        Price = int.Parse(parts[3]),\r\n                        Image = CreateImage(\"Images/\"+parts[4])\r\n                    };\r\n                    products.Add(p);\r\n                }\r\n                catch\r\n                {\r\n                    //todo felhantering\r\n                    MessageBox.Show(\"Error when reading product\");\r\n                }\r\n            }\r\n\r\n            // The method returns an array rather than a list (because the products are fixed after the program has started), so we need to convert it before returning.\r\n            return products.ToArray();\r\n        }\r\n        \r\n\r\n        private void Start()\r\n        {\r\n\r\n            Products = LoadProducts();\r\n\r\n            if (File.Exists(CartFilePath))\r\n            {\r\n                Cart.LoadFromFile(CartFilePath);\r\n            }\r\n            \r\n            //Shoppingcart klassen läser in från fil om den finns, annars skapar tom shoppingcart.\r\n            Cart = new ShoppingCart();\r\n\r\n\r\n            // Window options\r\n            Title = \"Potion Shop\";\r\n            Width = 1000;\r\n            Height = 618;\r\n            WindowStartupLocation = WindowStartupLocation.CenterScreen;\r\n\r\n            // Main grid (dividing header with rest of layout)\r\n            Grid firstgrid = CreateGrid(rows: new []{1, 6}, columns: null);\r\n            Content = firstgrid;\r\n            // Second Grid, Left side for item list and shopping cart, right side for item description\r\n            var secondGrid = CreateGrid(rows: null, columns: new []{1, 2});\r\n\r\n            // Third Grid, Top row for list of available products, Bottom row for shopping cart\r\n            var thirdGrid = CreateGrid(rows: new []{2, 1}, columns: null);\r\n\r\n            // This grid is for item description and image, and gets cleared and updated every selection change\r\n            TextandImageGrid = CreateGrid(rows: new []{5, 1}, columns: new []{1, 1});;\r\n\r\n            var buttonGrid = CreateGrid(rows: new[] {5, 1}, columns: new[] {1, 1, 1, 1});\r\n\r\n            //Adding grids to the grids\r\n            // add second grid to into second row of first grid\r\n            \r\n            firstgrid.Children.Add(secondGrid);\r\n            Grid.SetColumn(secondGrid, 0);\r\n            Grid.SetRow(secondGrid, 1);\r\n            \r\n            // add third grid to into first column of second grid\r\n            secondGrid.Children.Add(thirdGrid);\r\n            Grid.SetColumn(thirdGrid, 0);\r\n            Grid.SetRow(thirdGrid, 1);\r\n            \r\n            // add description grid to into second column of second grid\r\n            secondGrid.Children.Add(TextandImageGrid);\r\n            Grid.SetColumn(TextandImageGrid, 1);\r\n            Grid.SetRow(TextandImageGrid, 1);\r\n            \r\n\r\n            secondGrid.Children.Add(buttonGrid);\r\n            Grid.SetColumn(buttonGrid, 1);\r\n            Grid.SetRow(buttonGrid, 1);\r\n\r\n            // A text heading.\r\n            TextBlock heading = new TextBlock\r\n            {\r\n                Text = \"Potion Shop\",\r\n                TextWrapping = TextWrapping.Wrap,\r\n                Margin = new Thickness(5),\r\n                FontFamily = new FontFamily(\"Constantia\"),\r\n                FontSize = 20,\r\n                TextAlignment = TextAlignment.Center\r\n            };\r\n\r\n \r\n            firstgrid.Children.Add(heading);\r\n            Grid.SetColumn(heading, 0);\r\n            Grid.SetRow(heading, 0);\r\n            \r\n            ProductBox = new ListBox\r\n            {\r\n                Margin = new Thickness(5)\r\n            };\r\n\r\n            foreach (var product in Products)\r\n            {\r\n                ProductBox.Items.Add(new ListBoxItem() { Content = product.Name, Tag = product });\r\n            }\r\n            \r\n            ProductBox.SelectedIndex = -1;\r\n            thirdGrid.Children.Add(ProductBox);\r\n            Grid.SetColumn(ProductBox, 0);\r\n            Grid.SetRow(ProductBox, 0);\r\n            ProductBox.SelectionChanged += ProductBoxOnSelectionChanged;\r\n            \r\n            //shopping cart text\r\n            thirdGrid.Children.Add(cartTextBlock);\r\n            Grid.SetRow(cartTextBlock, 1);\r\n\r\n            infoPrice = new TextBlock\r\n            {\r\n                Text = \"\",\r\n                FontSize = 16,\r\n                Margin = new Thickness(10),\r\n                Padding = new Thickness(5),\r\n            };\r\n            buttonGrid.Children.Add(infoPrice);\r\n            Grid.SetColumn(infoPrice, 0);\r\n            Grid.SetRow(infoPrice, 1);\r\n\r\n            // Add to Cart button\r\n            addToCartButton = new Button\r\n            {\r\n                Content = \"Add to cart\",\r\n                Margin = new Thickness(10),\r\n                Padding = new Thickness(5),\r\n                FontSize = 16,\r\n                BorderThickness = new Thickness(2),\r\n                Background = Brushes.White,\r\n            };\r\n\r\n            buttonGrid.Children.Add(addToCartButton);\r\n            Grid.SetColumn(addToCartButton, 1);\r\n            Grid.SetRow(addToCartButton, 1);\r\n            ////Grid.SetColumnSpan(addToCartButton, 2);\r\n            addToCartButton.Click += AddToCartButtonOnClick;\r\n\r\n\r\n\r\n            // Check out button\r\n            checkoutButton = new Button \r\n            {\r\n                Content = \"Checkout\",\r\n                Margin = new Thickness(10),\r\n                Padding = new Thickness(5),\r\n                FontSize = 16,\r\n                BorderThickness = new Thickness(2),\r\n                Background = Brushes.White,\r\n            };\r\n            \r\n            buttonGrid.Children.Add(checkoutButton);\r\n            Grid.SetColumn(checkoutButton, 3);\r\n            Grid.SetRow(checkoutButton, 1);\r\n            //Grid.SetColumnSpan(addToCartButton, 2);\r\n            checkoutButton.Click += CheckoutButton_Click;\r\n\r\n        }\r\n\r\n        private static void CheckoutButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            MessageBox.Show(\"Not yet implemented\");\r\n        }\r\n\r\n        private void UpdateDescription(Product product)\r\n        {\r\n            InfoPanel = new StackPanel\r\n            {\r\n                Orientation = Orientation.Vertical,\r\n                Margin = new Thickness(5)\r\n            };\r\n            TextandImageGrid.Children.Add(InfoPanel);\r\n            Grid.SetColumn(InfoPanel, 0);\r\n            Grid.SetRow(InfoPanel, 0);\r\n\r\n            // The text heading inside the information panel.\r\n            TextBlock infoHeading = new TextBlock\r\n            {\r\n                Text = product.Name,\r\n                TextWrapping = TextWrapping.Wrap,\r\n                Margin = new Thickness(5),\r\n                FontFamily = new FontFamily(\"Constantia\"),\r\n                FontSize = 16,\r\n                TextAlignment = TextAlignment.Center\r\n            };\r\n            InfoPanel.Children.Add(infoHeading);\r\n            \r\n            InfoText = new TextBlock\r\n            {\r\n                //Add code to read CSV file of descriptions\r\n                Text = product.Description,\r\n                TextWrapping = TextWrapping.Wrap,\r\n                Margin = new Thickness(5),\r\n                FontFamily = new FontFamily(\"Constantia\"),\r\n                FontSize = 12\r\n            };\r\n            InfoPanel.Children.Add(InfoText);\r\n        }\r\n        private void PriceUpdate(Product product)\r\n        {\r\n            string a = product.Price.ToString();\r\n            infoPrice.Text = a + \"Kr\";\r\n        }\r\n\r\n        private void ProductBoxOnSelectionChanged(object sender, SelectionChangedEventArgs e)\r\n        {\r\n            //Först, Lagra det valda objektet i SelectedProduct\r\n            SelectedProduct = (Product)((ListBoxItem)ProductBox.SelectedItem).Tag;\r\n            \r\n            //Sedan uppdatera text och grafik\r\n            TextandImageGrid.Children.Clear();\r\n            UpdateDescription(SelectedProduct);\r\n            UpdateImage(SelectedProduct.Image);\r\n            PriceUpdate(SelectedProduct);\r\n        }\r\n\r\n        private void UpdateImage(Image image)\r\n        {\r\n            InfoImage = image;\r\n            InfoImage.Stretch = Stretch.Uniform;\r\n            TextandImageGrid.Children.Add(InfoImage);\r\n            Grid.SetColumn(InfoImage, 1);\r\n        }\r\n\r\n\r\n        private void AddToCartButtonOnClick(object sender, RoutedEventArgs e)\r\n        {\r\n            Cart.Add(SelectedProduct);\r\n            \r\n            double total = 0;\r\n            cartTextBlock.Text = \"\";\r\n            foreach (var item in Cart.Items)\r\n            {\r\n                Grid cartgrid = CreateGrid(new[] {1}, new[] {1, 1, 1});\r\n                cartTextBlock.Text += item.Value + \"x \" + item.Key.Name + \" \" + item.Key.Price + \"kr.\" + \"\\n\";\r\n                total += item.Key.Price * item.Value;\r\n            }\r\n\r\n            cartTextBlock.Text += \"Total: \" + total +\"kr\";\r\n\r\n\r\n\r\n        }\r\n\r\n        private static Grid CreateGrid(int[] rows, int[] columns)\r\n        {\r\n            var grid = new Grid\r\n            {\r\n                Margin = new Thickness(5)\r\n            };\r\n            //grid.ShowGridLines = true;\r\n\r\n            if (rows != null)\r\n            {\r\n                foreach (var height in rows)\r\n                {\r\n                    grid.RowDefinitions.Add(new RowDefinition {Height = new GridLength(height, GridUnitType.Star)});\r\n                }\r\n            }\r\n\r\n            if (columns == null) return grid;\r\n            foreach (var width in columns)\r\n            {\r\n                grid.ColumnDefinitions.Add(new ColumnDefinition {Width = new GridLength(width, GridUnitType.Star)});\r\n            }\r\n\r\n            return grid;\r\n        }\r\n\r\n\r\n        private static Image CreateImage(string filePath)\r\n        {\r\n            ImageSource source = new BitmapImage(new Uri(filePath, UriKind.Relative));\r\n            Image image = new Image\r\n            {\r\n                Source = source,\r\n                HorizontalAlignment = HorizontalAlignment.Center,\r\n                VerticalAlignment = VerticalAlignment.Center,\r\n                Margin = new Thickness(5)\r\n            };\r\n            // A small rendering tweak to ensure maximum visual appeal.\r\n            RenderOptions.SetBitmapScalingMode(image, BitmapScalingMode.HighQuality);\r\n            return image;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WPFProjectAssignment/MainWindow.xaml.cs b/WPFProjectAssignment/MainWindow.xaml.cs
--- a/WPFProjectAssignment/MainWindow.xaml.cs	(revision 93eee66bbe81f138d2f14ea5f11d6fdf837b1c7e)
+++ b/WPFProjectAssignment/MainWindow.xaml.cs	(date 1614859617620)
@@ -308,6 +308,7 @@
             
             double total = 0;
             cartTextBlock.Text = "";
+            
             foreach (var item in Cart.Items)
             {
                 Grid cartgrid = CreateGrid(new[] {1}, new[] {1, 1, 1});
Index: .idea/.idea.WPFProjectAssignment/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoGeneratedRunConfigurationManager\">\r\n    <projectFile>WPFProjectAssignment/WPFProjectAssignment.csproj</projectFile>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b64e7a94-9873-49da-9da8-a468d762395c\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.WPFProjectAssignment/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.WPFProjectAssignment/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WPFProjectAssignment/MainWindow.xaml.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WPFProjectAssignment/MainWindow.xaml.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WPFProjectAssignment/ShoppingCart.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WPFProjectAssignment/ShoppingCart.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.pdb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/MainWindow.baml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/MainWindow.baml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.dll\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.g.resources\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.g.resources\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.pdb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_MarkupCompile.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_MarkupCompile.cache\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/../../csharp-teknikhogskolan-uddevalla-2021/16 - GUI-layout/WPFCodeSamples/KitchenSink/MainWindow.xaml.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"IdeDocumentHistory\">\r\n    <changedPaths>\r\n      <option value=\"$PROJECT_DIR$/WPFProjectAssignment/Products\" />\r\n      <option value=\"$PROJECT_DIR$/WPFProjectAssignment/Products.csv\" />\r\n      <option value=\"$PROJECT_DIR$/WPFProjectAssignment/Product.cs\" />\r\n      <option value=\"$PROJECT_DIR$/WPFProjectAssignment/ShoppingCart.cs\" />\r\n      <option value=\"$PROJECT_DIR$/WPFProjectAssignment/MainWindow.xaml.cs\" />\r\n    </changedPaths>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1oha6Y6is5fAvgzJ6Hae2eLlRQN\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"DebuggerViewTab_PTCS_FirstProportionKey\" value=\"0.35017064\" />\r\n    <property name=\"DebuggerViewTab_PTCS_LastProportionKey\" value=\"0.0\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.sourceCode.C#\" />\r\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"WPFProjectAssignment\" type=\"DotNetProject\" factoryName=\".NET Project\">\r\n      <option name=\"EXE_PATH\" value=\"\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"PROJECT_PATH\" value=\"$PROJECT_DIR$/WPFProjectAssignment/WPFProjectAssignment.csproj\" />\r\n      <option name=\"PROJECT_EXE_PATH_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_ARGUMENTS_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_WORKING_DIRECTORY_TRACKING\" value=\"1\" />\r\n      <option name=\"PROJECT_KIND\" value=\"DotNetCore\" />\r\n      <option name=\"PROJECT_TFM\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b64e7a94-9873-49da-9da8-a468d762395c\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1613741103473</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1613741103473</updated>\r\n      <workItem from=\"1613741107227\" duration=\"2169000\" />\r\n      <workItem from=\"1614422150581\" duration=\"4682000\" />\r\n      <workItem from=\"1614510258522\" duration=\"5717000\" />\r\n      <workItem from=\"1614602900396\" duration=\"1518000\" />\r\n      <workItem from=\"1614631143589\" duration=\"17284000\" />\r\n      <workItem from=\"1614704275693\" duration=\"10276000\" />\r\n      <workItem from=\"1614786039927\" duration=\"20065000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityProjectConfiguration\" hasMinimizedUI=\"false\" />\r\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"NUnit\" />\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.WPFProjectAssignment/.idea/workspace.xml b/.idea/.idea.WPFProjectAssignment/.idea/workspace.xml
--- a/.idea/.idea.WPFProjectAssignment/.idea/workspace.xml	(revision 93eee66bbe81f138d2f14ea5f11d6fdf837b1c7e)
+++ b/.idea/.idea.WPFProjectAssignment/.idea/workspace.xml	(date 1614860220083)
@@ -7,14 +7,6 @@
     <list default="true" id="b64e7a94-9873-49da-9da8-a468d762395c" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/.idea.WPFProjectAssignment/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.WPFProjectAssignment/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/WPFProjectAssignment/MainWindow.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/WPFProjectAssignment/MainWindow.xaml.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WPFProjectAssignment/ShoppingCart.cs" beforeDir="false" afterPath="$PROJECT_DIR$/WPFProjectAssignment/ShoppingCart.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.dll" beforeDir="false" afterPath="$PROJECT_DIR$/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.dll" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.pdb" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/MainWindow.baml" beforeDir="false" afterPath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/MainWindow.baml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.dll" beforeDir="false" afterPath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.dll" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.g.resources" beforeDir="false" afterPath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.g.resources" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment.pdb" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_MarkupCompile.cache" beforeDir="false" afterPath="$PROJECT_DIR$/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_MarkupCompile.cache" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -102,7 +94,7 @@
       <workItem from="1614602900396" duration="1518000" />
       <workItem from="1614631143589" duration="17284000" />
       <workItem from="1614704275693" duration="10276000" />
-      <workItem from="1614786039927" duration="20065000" />
+      <workItem from="1614786039927" duration="21246000" />
     </task>
     <servers />
   </component>
