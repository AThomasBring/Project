Index: WPFProjectAssignment/MainWindow.xaml.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Dynamic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\nusing System.Windows;\r\nusing System.Windows.Controls;\r\nusing System.Windows.Data;\r\nusing System.Windows.Documents;\r\nusing System.Windows.Input;\r\nusing System.Windows.Media;\r\nusing System.Windows.Media.Imaging;\r\nusing System.Windows.Navigation;\r\nusing System.Windows.Shapes;\r\n\r\nnamespace WPFProjectAssignment\r\n{\r\n    public partial class MainWindow : Window\r\n    {\r\n        // A static variable in the `Program` class is available in every method of that class. Effectively a \"global\" variable.\r\n\r\n        // Array of Products & Dictionary for shopping cart\r\n        public static Product[] Products;\r\n        public static ShoppingCart Cart;\r\n        \r\n\r\n        // We store product information in a CSV file in the project directory.\r\n        public const string ProductFilePath = \"Products.csv\";\r\n        public const string CartFilePath = @\"C:\\Windows\\Temp\\Cart.csv\";\r\n\r\n        private ListBox ProductBox = new ListBox();\r\n        private TextBlock InfoText = new TextBlock();\r\n        private Image InfoImage = new Image();\r\n        private Grid TextandImageGrid = new Grid();\r\n        private Grid ButtonGrid = new Grid();\r\n        private StackPanel InfoPanel = new StackPanel();\r\n        private TextBlock cartTextBlock = new TextBlock();\r\n        private TextBlock infoPrice = new TextBlock();\r\n        private Button checkoutButton = new Button();\r\n        private Button addToCartButton = new Button();\r\n        private TextBox DiscountBlock = new TextBox();\r\n\r\n        // We store the most recent selected product here\r\n        private Product SelectedProduct { get; set; }\r\n\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n            Start();\r\n        }\r\n\r\n        private static Product[] LoadProducts()\r\n        {\r\n            // If the file doesn't exist, stop the program completely.\r\n            if (!File.Exists(ProductFilePath))\r\n            {\r\n                //todo felhantering\r\n                MessageBox.Show(\"Could not read product file.\");\r\n            }\r\n\r\n            // Create an empty list of products, then go through each line of the file to fill it.\r\n            List<Product> products = new List<Product>();\r\n            string[] lines = File.ReadAllLines(ProductFilePath);\r\n\r\n            foreach (string line in lines)\r\n            {\r\n                try\r\n                {\r\n                    // First, split the line on commas (CSV means \"comma-separated values\").\r\n                    string[] parts = line.Split(',');\r\n\r\n                    // Then create a product with its values set to the different parts of the line.\r\n                    Product p = new Product\r\n                    {\r\n                        Code = parts[0],\r\n                        Name = parts[1],\r\n                        Description = parts[2],\r\n                        Price = int.Parse(parts[3]),\r\n                        Image = CreateImage(\"Images/\"+parts[4])\r\n                    };\r\n                    products.Add(p);\r\n                }\r\n                catch\r\n                {\r\n                    //todo felhantering\r\n                    MessageBox.Show(\"Error when reading product\");\r\n                }\r\n            }\r\n\r\n            // The method returns an array rather than a list (because the products are fixed after the program has started), so we need to convert it before returning.\r\n            return products.ToArray();\r\n        }\r\n        \r\n\r\n        private void Start()\r\n        {\r\n\r\n            Products = LoadProducts();\r\n\r\n            if (File.Exists(CartFilePath))\r\n            {\r\n                Cart.LoadFromFile(CartFilePath);\r\n            }\r\n            \r\n            //Shoppingcart klassen läser in från fil om den finns, annars skapar tom shoppingcart.\r\n            Cart = new ShoppingCart();\r\n\r\n\r\n            // Window options\r\n            Title = \"Potion Shop\";\r\n            Width = 1000;\r\n            Height = 618;\r\n            WindowStartupLocation = WindowStartupLocation.CenterScreen;\r\n\r\n            // Main grid (dividing header with rest of layout)\r\n            Grid firstgrid = CreateGrid(rows: new []{1, 6}, columns: null);\r\n            Content = firstgrid;\r\n            // Second Grid, Left side for item list and shopping cart, right side for item description\r\n            var secondGrid = CreateGrid(rows: null, columns: new []{1, 2});\r\n\r\n            // Third Grid, Top row for list of available products, Bottom row for shopping cart\r\n            var thirdGrid = CreateGrid(rows: new []{2, 1}, columns: null);\r\n\r\n            // This grid is for item description and image, and gets cleared and updated every selection change\r\n            TextandImageGrid = CreateGrid(rows: new []{5, 1}, columns: new []{1, 1});;\r\n\r\n            var buttonGrid = CreateGrid(rows: new[] {5, 1}, columns: new[] {1, 1, 1, 1});\r\n\r\n            //Adding grids to the grids\r\n            // add second grid to into second row of first grid\r\n            \r\n            firstgrid.Children.Add(secondGrid);\r\n            Grid.SetColumn(secondGrid, 0);\r\n            Grid.SetRow(secondGrid, 1);\r\n            \r\n            // add third grid to into first column of second grid\r\n            secondGrid.Children.Add(thirdGrid);\r\n            Grid.SetColumn(thirdGrid, 0);\r\n            Grid.SetRow(thirdGrid, 1);\r\n            \r\n            // add description grid to into second column of second grid\r\n            secondGrid.Children.Add(TextandImageGrid);\r\n            Grid.SetColumn(TextandImageGrid, 1);\r\n            Grid.SetRow(TextandImageGrid, 1);\r\n            \r\n\r\n            secondGrid.Children.Add(buttonGrid);\r\n            Grid.SetColumn(buttonGrid, 1);\r\n            Grid.SetRow(buttonGrid, 1);\r\n\r\n            // A text heading.\r\n            TextBlock heading = new TextBlock\r\n            {\r\n                Text = \"Potion Shop\",\r\n                TextWrapping = TextWrapping.Wrap,\r\n                Margin = new Thickness(5),\r\n                FontFamily = new FontFamily(\"Constantia\"),\r\n                FontSize = 20,\r\n                TextAlignment = TextAlignment.Center\r\n            };\r\n\r\n \r\n            firstgrid.Children.Add(heading);\r\n            Grid.SetColumn(heading, 0);\r\n            Grid.SetRow(heading, 0);\r\n            \r\n            ProductBox = new ListBox\r\n            {\r\n                Margin = new Thickness(5)\r\n            };\r\n\r\n            foreach (var product in Products)\r\n            {\r\n                ProductBox.Items.Add(new ListBoxItem() { Content = product.Name, Tag = product });\r\n            }\r\n            \r\n            ProductBox.SelectedIndex = -1;\r\n            thirdGrid.Children.Add(ProductBox);\r\n            Grid.SetColumn(ProductBox, 0);\r\n            Grid.SetRow(ProductBox, 0);\r\n            ProductBox.SelectionChanged += ProductBoxOnSelectionChanged;\r\n            \r\n            //shopping cart text\r\n            thirdGrid.Children.Add(cartTextBlock);\r\n            Grid.SetRow(cartTextBlock, 1);\r\n\r\n            infoPrice = new TextBlock\r\n            {\r\n                Text = \"\",\r\n                FontSize = 16,\r\n                Margin = new Thickness(10),\r\n                Padding = new Thickness(5),\r\n            };\r\n            buttonGrid.Children.Add(infoPrice);\r\n            Grid.SetColumn(infoPrice, 0);\r\n            Grid.SetRow(infoPrice, 1);\r\n\r\n            // Add to Cart button\r\n            addToCartButton = new Button\r\n            {\r\n                Content = \"Add to cart\",\r\n                Margin = new Thickness(10),\r\n                Padding = new Thickness(5),\r\n                FontSize = 16,\r\n                BorderThickness = new Thickness(2),\r\n                Background = Brushes.White,\r\n            };\r\n\r\n            buttonGrid.Children.Add(addToCartButton);\r\n            Grid.SetColumn(addToCartButton, 1);\r\n            Grid.SetRow(addToCartButton, 1);\r\n            ////Grid.SetColumnSpan(addToCartButton, 2);\r\n            addToCartButton.Click += AddToCartButtonOnClick;\r\n\r\n\r\n\r\n            // Check out button\r\n            checkoutButton = new Button \r\n            {\r\n                Content = \"Checkout\",\r\n                Margin = new Thickness(10),\r\n                Padding = new Thickness(5),\r\n                FontSize = 16,\r\n                BorderThickness = new Thickness(2),\r\n                Background = Brushes.White,\r\n            };\r\n            \r\n            buttonGrid.Children.Add(checkoutButton);\r\n            Grid.SetColumn(checkoutButton, 3);\r\n            Grid.SetRow(checkoutButton, 1);\r\n            //Grid.SetColumnSpan(addToCartButton, 2);\r\n            checkoutButton.Click += CheckoutButton_Click;\r\n\r\n        }\r\n\r\n        private static void CheckoutButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            MessageBox.Show(\"Not yet implemented\");\r\n        }\r\n\r\n        private void UpdateDescription(Product product)\r\n        {\r\n            InfoPanel = new StackPanel\r\n            {\r\n                Orientation = Orientation.Vertical,\r\n                Margin = new Thickness(5)\r\n            };\r\n            TextandImageGrid.Children.Add(InfoPanel);\r\n            Grid.SetColumn(InfoPanel, 0);\r\n            Grid.SetRow(InfoPanel, 0);\r\n\r\n            // The text heading inside the information panel.\r\n            TextBlock infoHeading = new TextBlock\r\n            {\r\n                Text = product.Name,\r\n                TextWrapping = TextWrapping.Wrap,\r\n                Margin = new Thickness(5),\r\n                FontFamily = new FontFamily(\"Constantia\"),\r\n                FontSize = 16,\r\n                TextAlignment = TextAlignment.Center\r\n            };\r\n            InfoPanel.Children.Add(infoHeading);\r\n            \r\n            InfoText = new TextBlock\r\n            {\r\n                //Add code to read CSV file of descriptions\r\n                Text = product.Description,\r\n                TextWrapping = TextWrapping.Wrap,\r\n                Margin = new Thickness(5),\r\n                FontFamily = new FontFamily(\"Constantia\"),\r\n                FontSize = 12\r\n            };\r\n            InfoPanel.Children.Add(InfoText);\r\n        }\r\n        private void PriceUpdate(Product product)\r\n        {\r\n            string a = product.Price.ToString();\r\n            infoPrice.Text = a + \"Kr\";\r\n        }\r\n\r\n        private void ProductBoxOnSelectionChanged(object sender, SelectionChangedEventArgs e)\r\n        {\r\n            //Först, Lagra det valda objektet i SelectedProduct\r\n            SelectedProduct = (Product)((ListBoxItem)ProductBox.SelectedItem).Tag;\r\n            \r\n            //Sedan uppdatera text och grafik\r\n            TextandImageGrid.Children.Clear();\r\n            UpdateDescription(SelectedProduct);\r\n            UpdateImage(SelectedProduct.Image);\r\n            PriceUpdate(SelectedProduct);\r\n        }\r\n\r\n        private void UpdateImage(Image image)\r\n        {\r\n            InfoImage = image;\r\n            InfoImage.Stretch = Stretch.Uniform;\r\n            TextandImageGrid.Children.Add(InfoImage);\r\n            Grid.SetColumn(InfoImage, 1);\r\n        }\r\n\r\n\r\n        private void AddToCartButtonOnClick(object sender, RoutedEventArgs e)\r\n        {\r\n            Cart.Add(SelectedProduct);\r\n            \r\n            double total = 0;\r\n            cartTextBlock.Text = \"\";\r\n            foreach (var item in Cart.Items)\r\n            {\r\n                Grid cartgrid = CreateGrid(new[] {1}, new[] {1, 1, 1});\r\n                cartTextBlock.Text += item.Value + \"x \" + item.Key.Name + \" \" + item.Key.Price + \"kr.\" + \"\\n\";\r\n                total += item.Key.Price * item.Value;\r\n            }\r\n\r\n            cartTextBlock.Text += \"Total: \" + total +\"kr\";\r\n\r\n\r\n\r\n        }\r\n\r\n        private static Grid CreateGrid(int[] rows, int[] columns)\r\n        {\r\n            var grid = new Grid\r\n            {\r\n                Margin = new Thickness(5)\r\n            };\r\n            //grid.ShowGridLines = true;\r\n\r\n            if (rows != null)\r\n            {\r\n                foreach (var height in rows)\r\n                {\r\n                    grid.RowDefinitions.Add(new RowDefinition {Height = new GridLength(height, GridUnitType.Star)});\r\n                }\r\n            }\r\n\r\n            if (columns == null) return grid;\r\n            foreach (var width in columns)\r\n            {\r\n                grid.ColumnDefinitions.Add(new ColumnDefinition {Width = new GridLength(width, GridUnitType.Star)});\r\n            }\r\n\r\n            return grid;\r\n        }\r\n\r\n\r\n        private static Image CreateImage(string filePath)\r\n        {\r\n            ImageSource source = new BitmapImage(new Uri(filePath, UriKind.Relative));\r\n            Image image = new Image\r\n            {\r\n                Source = source,\r\n                HorizontalAlignment = HorizontalAlignment.Center,\r\n                VerticalAlignment = VerticalAlignment.Center,\r\n                Margin = new Thickness(5)\r\n            };\r\n            // A small rendering tweak to ensure maximum visual appeal.\r\n            RenderOptions.SetBitmapScalingMode(image, BitmapScalingMode.HighQuality);\r\n            return image;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WPFProjectAssignment/MainWindow.xaml.cs b/WPFProjectAssignment/MainWindow.xaml.cs
--- a/WPFProjectAssignment/MainWindow.xaml.cs	(revision 93eee66bbe81f138d2f14ea5f11d6fdf837b1c7e)
+++ b/WPFProjectAssignment/MainWindow.xaml.cs	(date 1614860266804)
@@ -308,6 +308,7 @@
             
             double total = 0;
             cartTextBlock.Text = "";
+            
             foreach (var item in Cart.Items)
             {
                 Grid cartgrid = CreateGrid(new[] {1}, new[] {1, 1, 1});
Index: WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.runtimeconfig.dev.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"runtimeOptions\": {\r\n    \"additionalProbingPaths\": [\r\n      \"C:\\\\Users\\\\admin\\\\.dotnet\\\\store\\\\|arch|\\\\|tfm|\",\r\n      \"C:\\\\Users\\\\anton\\\\.nuget\\\\packages\"\r\n    ]\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.runtimeconfig.dev.json b/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.runtimeconfig.dev.json
--- a/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.runtimeconfig.dev.json	(revision 93eee66bbe81f138d2f14ea5f11d6fdf837b1c7e)
+++ b/WPFProjectAssignment/bin/Debug/netcoreapp3.1/WPFProjectAssignment.runtimeconfig.dev.json	(date 1614860266906)
@@ -1,7 +1,7 @@
 {
   "runtimeOptions": {
     "additionalProbingPaths": [
-      "C:\\Users\\admin\\.dotnet\\store\\|arch|\\|tfm|",
+      "C:\\Users\\anton\\.dotnet\\store\\|arch|\\|tfm|",
       "C:\\Users\\anton\\.nuget\\packages"
     ]
   }
Index: WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_Content.g.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute(\"products.csv\")]\r\n[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute(\"images/agingpotion.jpg\")]\r\n[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute(\"images/babblingbeverage.jpg\")]\r\n[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute(\"images/elixiroflife.jpg\")]\r\n[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute(\"images/draughtoflivingdeath.jpg\")]\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_Content.g.cs b/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_Content.g.cs
--- a/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_Content.g.cs	(revision 93eee66bbe81f138d2f14ea5f11d6fdf837b1c7e)
+++ b/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_Content.g.cs	(date 1614860266918)
@@ -1,6 +1,7 @@
 //------------------------------------------------------------------------------
 // <auto-generated>
 //     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
 //
 //     Changes to this file may cause incorrect behavior and will be lost if
 //     the code is regenerated.
Index: WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_MarkupCompile.lref
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n\r\nFC:\\Users\\admin\\Documents\\GitHub\\Project\\WPFProjectAssignment\\WPFProjectAssignment\\MainWindow.xaml;;\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_MarkupCompile.lref b/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_MarkupCompile.lref
--- a/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_MarkupCompile.lref	(revision 93eee66bbe81f138d2f14ea5f11d6fdf837b1c7e)
+++ b/WPFProjectAssignment/obj/Debug/netcoreapp3.1/WPFProjectAssignment_MarkupCompile.lref	(date 1614860266919)
@@ -1,4 +1,4 @@
 
 
-FC:\Users\admin\Documents\GitHub\Project\WPFProjectAssignment\WPFProjectAssignment\MainWindow.xaml;;
+FC:\Users\anton\OneDrive\Dokument\GitHub\Project\WPFProjectAssignment\WPFProjectAssignment\MainWindow.xaml;;
 
Index: WPFProjectAssignment/obj/Debug/netcoreapp3.1/MainWindow.g.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#pragma checksum \"..\\..\\..\\MainWindow.xaml\" \"{ff1816ec-aa5e-4d10-87f7-6f4963833460}\" \"A70BE369942759D7A8FBB848C58DA4F396DE4011\"\r\n//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Windows;\r\nusing System.Windows.Automation;\r\nusing System.Windows.Controls;\r\nusing System.Windows.Controls.Primitives;\r\nusing System.Windows.Controls.Ribbon;\r\nusing System.Windows.Data;\r\nusing System.Windows.Documents;\r\nusing System.Windows.Ink;\r\nusing System.Windows.Input;\r\nusing System.Windows.Markup;\r\nusing System.Windows.Media;\r\nusing System.Windows.Media.Animation;\r\nusing System.Windows.Media.Effects;\r\nusing System.Windows.Media.Imaging;\r\nusing System.Windows.Media.Media3D;\r\nusing System.Windows.Media.TextFormatting;\r\nusing System.Windows.Navigation;\r\nusing System.Windows.Shapes;\r\nusing System.Windows.Shell;\r\nusing WPFProjectAssignment;\r\n\r\n\r\nnamespace WPFProjectAssignment {\r\n    \r\n    \r\n    /// <summary>\r\n    /// MainWindow\r\n    /// </summary>\r\n    public partial class MainWindow : System.Windows.Window, System.Windows.Markup.IComponentConnector {\r\n        \r\n        private bool _contentLoaded;\r\n        \r\n        /// <summary>\r\n        /// InitializeComponent\r\n        /// </summary>\r\n        [System.Diagnostics.DebuggerNonUserCodeAttribute()]\r\n        [System.CodeDom.Compiler.GeneratedCodeAttribute(\"PresentationBuildTasks\", \"5.0.3.0\")]\r\n        public void InitializeComponent() {\r\n            if (_contentLoaded) {\r\n                return;\r\n            }\r\n            _contentLoaded = true;\r\n            System.Uri resourceLocater = new System.Uri(\"/WPFProjectAssignment;component/mainwindow.xaml\", System.UriKind.Relative);\r\n            \r\n            #line 1 \"..\\..\\..\\MainWindow.xaml\"\r\n            System.Windows.Application.LoadComponent(this, resourceLocater);\r\n            \r\n            #line default\r\n            #line hidden\r\n        }\r\n        \r\n        [System.Diagnostics.DebuggerNonUserCodeAttribute()]\r\n        [System.CodeDom.Compiler.GeneratedCodeAttribute(\"PresentationBuildTasks\", \"5.0.3.0\")]\r\n        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Design\", \"CA1033:InterfaceMethodsShouldBeCallableByChildTypes\")]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Maintainability\", \"CA1502:AvoidExcessiveComplexity\")]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Performance\", \"CA1800:DoNotCastUnnecessarily\")]\r\n        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {\r\n            this._contentLoaded = true;\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WPFProjectAssignment/obj/Debug/netcoreapp3.1/MainWindow.g.cs b/WPFProjectAssignment/obj/Debug/netcoreapp3.1/MainWindow.g.cs
--- a/WPFProjectAssignment/obj/Debug/netcoreapp3.1/MainWindow.g.cs	(revision 93eee66bbe81f138d2f14ea5f11d6fdf837b1c7e)
+++ b/WPFProjectAssignment/obj/Debug/netcoreapp3.1/MainWindow.g.cs	(date 1614860266909)
@@ -2,6 +2,7 @@
 //------------------------------------------------------------------------------
 // <auto-generated>
 //     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
 //
 //     Changes to this file may cause incorrect behavior and will be lost if
 //     the code is regenerated.
Index: WPFProjectAssignment/obj/Debug/netcoreapp3.1/App.g.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#pragma checksum \"..\\..\\..\\App.xaml\" \"{ff1816ec-aa5e-4d10-87f7-6f4963833460}\" \"2C68C0BA0CBD01F020DC7D320B2899A70FEE923D\"\r\n//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Windows;\r\nusing System.Windows.Automation;\r\nusing System.Windows.Controls;\r\nusing System.Windows.Controls.Primitives;\r\nusing System.Windows.Controls.Ribbon;\r\nusing System.Windows.Data;\r\nusing System.Windows.Documents;\r\nusing System.Windows.Ink;\r\nusing System.Windows.Input;\r\nusing System.Windows.Markup;\r\nusing System.Windows.Media;\r\nusing System.Windows.Media.Animation;\r\nusing System.Windows.Media.Effects;\r\nusing System.Windows.Media.Imaging;\r\nusing System.Windows.Media.Media3D;\r\nusing System.Windows.Media.TextFormatting;\r\nusing System.Windows.Navigation;\r\nusing System.Windows.Shapes;\r\nusing System.Windows.Shell;\r\nusing WPFProjectAssignment;\r\n\r\n\r\nnamespace WPFProjectAssignment {\r\n    \r\n    \r\n    /// <summary>\r\n    /// App\r\n    /// </summary>\r\n    public partial class App : System.Windows.Application {\r\n        \r\n        /// <summary>\r\n        /// InitializeComponent\r\n        /// </summary>\r\n        [System.Diagnostics.DebuggerNonUserCodeAttribute()]\r\n        [System.CodeDom.Compiler.GeneratedCodeAttribute(\"PresentationBuildTasks\", \"5.0.3.0\")]\r\n        public void InitializeComponent() {\r\n            \r\n            #line 5 \"..\\..\\..\\App.xaml\"\r\n            this.StartupUri = new System.Uri(\"MainWindow.xaml\", System.UriKind.Relative);\r\n            \r\n            #line default\r\n            #line hidden\r\n        }\r\n        \r\n        /// <summary>\r\n        /// Application Entry Point.\r\n        /// </summary>\r\n        [System.STAThreadAttribute()]\r\n        [System.Diagnostics.DebuggerNonUserCodeAttribute()]\r\n        [System.CodeDom.Compiler.GeneratedCodeAttribute(\"PresentationBuildTasks\", \"5.0.3.0\")]\r\n        public static void Main() {\r\n            WPFProjectAssignment.App app = new WPFProjectAssignment.App();\r\n            app.InitializeComponent();\r\n            app.Run();\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WPFProjectAssignment/obj/Debug/netcoreapp3.1/App.g.cs b/WPFProjectAssignment/obj/Debug/netcoreapp3.1/App.g.cs
--- a/WPFProjectAssignment/obj/Debug/netcoreapp3.1/App.g.cs	(revision 93eee66bbe81f138d2f14ea5f11d6fdf837b1c7e)
+++ b/WPFProjectAssignment/obj/Debug/netcoreapp3.1/App.g.cs	(date 1614860266908)
@@ -2,6 +2,7 @@
 //------------------------------------------------------------------------------
 // <auto-generated>
 //     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
 //
 //     Changes to this file may cause incorrect behavior and will be lost if
 //     the code is regenerated.
